{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Tags.svelte",
    "../../ErrorMessage.svelte",
    "../../Filter.svelte",
    "../../Header.svelte",
    "../../ProductItem.svelte",
    "../../ProductList.svelte",
    "../../Setting.svelte",
    "../../Share.svelte",
    "../../products.svelte",
    "../../view.svelte"
  ],
  "sourcesContent": [
    "<script>\r\nimport { createEventDispatcher } from 'svelte';\r\n\r\nconst dispatch = createEventDispatcher();\r\n\r\nlet tag = \"\";\r\nlet arrelementsmatch = [];\r\nlet regExpEscape = (s) => {\r\n  return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\")\r\n}\r\n\r\nexport let tags;\r\nexport let addKeys;\r\nexport let maxTags;\r\nexport let onlyUnique;\r\nexport let removeKeys;\r\nexport let placeholder;\r\nexport let allowPaste;\r\nexport let allowDrop;\r\nexport let splitWith;\r\nexport let autoComplete;\r\nexport let autoCompleteKey;\r\nexport let name;\r\nexport let id;\r\nexport let allowBlur;\r\nexport let disable;\r\nexport let minChars;\r\nexport let onlyAutocomplete;\r\nexport let labelText;\r\nexport let labelShow;\r\n\r\n$: tags = tags || [];\r\n$: addKeys = addKeys || [13];\r\n$: maxTags = maxTags || false;\r\n$: onlyUnique = onlyUnique || false;\r\n$: removeKeys = removeKeys || [8];\r\n$: placeholder = placeholder || \"\";\r\n$: allowPaste = allowPaste || false;\r\n$: allowDrop = allowDrop || false;\r\n$: splitWith = splitWith || \",\";\r\n$: autoComplete = autoComplete || false;\r\n$: autoCompleteKey = autoCompleteKey || false;\r\n$: name = name || \"svelte-tags-input\";\r\n$: id = id || uniqueID();\r\n$: allowBlur = allowBlur || false;\r\n$: disable = disable || false;\r\n$: minChars = minChars || 1;\r\n$: onlyAutocomplete = onlyAutocomplete || false;\r\n$: labelText = labelText || name;\r\n$: labelShow = labelShow || false;\r\n\r\n$: matchsID = id + \"_matchs\";\r\n\r\nlet storePlaceholder = placeholder;\r\n\r\nfunction setTag(input) {\r\n    const currentTag = input.target.value;\r\n    \r\n    if (addKeys) {\r\n        addKeys.forEach(function(key) {\r\n            if (key === input.keyCode) {\r\n                \r\n                if (currentTag) input.preventDefault();\r\n                                \r\n                /* switch (input.keyCode) {\r\n                case 9:\r\n                    // TAB add first element on the autoComplete list\r\n                    if (autoComplete && document.getElementById(matchsID)) {                        \r\n                        addTag(document.getElementById(matchsID).querySelectorAll(\"li\")[0].textContent);\r\n                    } else {\r\n                        addTag(currentTag);\r\n                    }                    \r\n                    break;\r\n                default:\r\n                    addTag(currentTag);\r\n                    break;\r\n                } */\r\n                if (autoComplete && document.getElementById(matchsID)) {\r\n                    addTag(document.getElementById(matchsID).querySelectorAll(\"li\")[0].textContent);\r\n                } else {\r\n                    addTag(currentTag);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    if (removeKeys) {\r\n        removeKeys.forEach(function(key) {\r\n            if (key === input.keyCode && tag === \"\") {\r\n                tags.pop();  \r\n                tags = tags;\r\n\r\n                dispatch('tags', {\r\n                    tags: tags\r\n                });\r\n\r\n                arrelementsmatch = [];\r\n                document.getElementById(id).readOnly = false;\r\n                placeholder = storePlaceholder;\r\n                document.getElementById(id).focus();\r\n            }\r\n        });\r\n    }\r\n    \r\n    // ArrowDown : focus on first element of the autocomplete\r\n    if (input.keyCode === 40 && autoComplete && document.getElementById(matchsID)) {\r\n        event.preventDefault();\r\n        document.getElementById(matchsID).querySelector(\"li:first-child\").focus();\r\n    } // ArrowUp : focus on last element of the autocomplete\r\n    else if (input.keyCode === 38 && autoComplete && document.getElementById(matchsID)) {\r\n        event.preventDefault();\r\n        document.getElementById(matchsID).querySelector(\"li:last-child\").focus();\r\n    }\r\n\r\n}\r\n\r\nfunction addTag(currentTag) {\r\n\r\n    if (typeof currentTag === 'object' && currentTag !== null) {\r\n        if (!autoCompleteKey) {\r\n            return console.error(\"'autoCompleteKey' is necessary if 'autoComplete' result is an array of objects\");\r\n        }\r\n\r\n        var currentObjTags = currentTag;\r\n        currentTag = currentTag[autoCompleteKey].trim();\r\n\r\n    } else {\r\n        currentTag = currentTag.trim();\r\n    }\r\n    \r\n    if (currentTag == \"\") return;\r\n    if (maxTags && tags.length == maxTags) return;\r\n    if (onlyUnique && tags.includes(currentTag)) return;\r\n    if (onlyAutocomplete && arrelementsmatch.length === 0) return;\r\n        \r\n    tags.push(currentObjTags ? currentObjTags : currentTag)\r\n    tags = tags;\r\n    tag = \"\";\r\n\r\n    dispatch('tags', {\r\n        tags: tags\r\n    });\r\n    \r\n    // Hide autocomplete list\r\n    // Focus on svelte tags input\r\n    arrelementsmatch = [];\r\n    document.getElementById(id).focus();\r\n\r\n    if (maxTags && tags.length == maxTags) {\r\n        document.getElementById(id).readOnly = true;\r\n        placeholder = \"\";\r\n    };\r\n\r\n}\r\n\r\nfunction removeTag(i) {\r\n    \r\n    tags.splice(i, 1);\r\n    tags = tags;\r\n\r\n    dispatch('tags', {\r\n\t\ttags: tags\r\n\t});    \r\n    \r\n    // Hide autocomplete list\r\n    // Focus on svelte tags input\r\n    arrelementsmatch = [];\r\n    document.getElementById(id).readOnly = false;\r\n    placeholder = storePlaceholder;\r\n    document.getElementById(id).focus();\r\n\r\n}\r\n\r\nfunction onPaste(e){\r\n\r\n    if(!allowPaste) return;\r\n\r\n    e.preventDefault();\r\n\r\n    const data = getClipboardData(e);\r\n    const tags = splitTags(data).map(tag => addTag(tag));\r\n    \r\n}\r\n\r\nfunction onDrop(e){\r\n\r\n    if(!allowDrop) return;\r\n\r\n    e.preventDefault();\r\n\r\n    const data = e.dataTransfer.getData(\"Text\");\r\n    const tags = splitTags(data).map(tag => addTag(tag));\r\n\r\n}\r\n\r\nfunction onBlur(tag){\r\n\r\n    if (!document.getElementById(matchsID) && allowBlur) {\r\n        event.preventDefault();\r\n        addTag(tag);\r\n    }\r\n    \r\n}\r\n\r\nfunction getClipboardData(e) {\r\n\r\n    if (window.clipboardData) {\r\n        return window.clipboardData.getData('Text')\r\n    }\r\n\r\n    if (e.clipboardData) {\r\n        return e.clipboardData.getData('text/plain')\r\n    }\r\n\r\n    return ''\r\n}\r\n\r\nfunction splitTags(data) {\r\n    return data.split(splitWith).map(tag => tag.trim());    \r\n}\r\n\r\nasync function getMatchElements(input) {\r\n\r\n    if (!autoComplete) return;\r\n\r\n    let autoCompleteValues = [];\r\n    \r\n    if (Array.isArray(autoComplete)) {\r\n        autoCompleteValues = autoComplete\r\n    }\r\n            \r\n    if (typeof autoComplete === 'function') {\r\n        if(autoComplete.constructor.name === 'AsyncFunction') {\r\n            autoCompleteValues = await autoComplete()\r\n        } else {\r\n            autoCompleteValues = autoComplete()\r\n        }\r\n    }\r\n    \r\n    var value = input.target.value;\r\n    \r\n    // Escape\r\n    if (value == \"\" || input.keyCode === 27 || value.length < minChars ) {\r\n        arrelementsmatch = [];\r\n        return;\r\n    }\r\n    \r\n    if (typeof autoCompleteValues[0] === 'object' && autoCompleteValues !== null) {\r\n        \r\n        if (!autoCompleteKey) {\r\n            return console.error(\"'autoCompleteValue' is necessary if 'autoComplete' result is an array of objects\");\r\n        }\r\n\r\n        var matchs = autoCompleteValues.filter(e => e[autoCompleteKey].toLowerCase().includes(value.toLowerCase())).map(matchTag => {\r\n            return {\r\n                label: matchTag,\r\n                search: matchTag[autoCompleteKey].replace(RegExp(regExpEscape(value.toLowerCase()), 'i'), \"<strong>$&</strong>\")\r\n            }\r\n        });\r\n\r\n\r\n    } else {\r\n        var matchs = autoCompleteValues.filter(e => e.toLowerCase().includes(value.toLowerCase())).map(matchTag => {\r\n            return {\r\n                label: matchTag,\r\n                search: matchTag.replace(RegExp(regExpEscape(value.toLowerCase()), 'i'), \"<strong>$&</strong>\")\r\n            }\r\n        });\r\n    }\r\n\r\n    if (onlyUnique === true && !autoCompleteKey) {\r\n        matchs = matchs.filter(tag => !tags.includes(tag.label));\r\n    }\r\n\r\n    arrelementsmatch = matchs;\r\n}\r\n\r\nfunction navigateAutoComplete(autoCompleteIndex, autoCompleteLength, autoCompleteElement) {\r\n\r\n    if (!autoComplete) return;\r\n    \r\n    event.preventDefault();\r\n\r\n    // ArrowDown\r\n    if (event.keyCode === 40) {\r\n        // Last element on the list ? Go to the first\r\n        if (autoCompleteIndex + 1 === autoCompleteLength) {\r\n            document.getElementById(matchsID).querySelector(\"li:first-child\").focus();\r\n            return;\r\n        }\r\n        document.getElementById(matchsID).querySelectorAll(\"li\")[autoCompleteIndex + 1].focus();\r\n    } else if (event.keyCode === 38) {\r\n        // ArrowUp\r\n        // First element on the list ? Go to the last\r\n        if (autoCompleteIndex === 0) {\r\n            document.getElementById(matchsID).querySelector(\"li:last-child\").focus();\r\n            return;\r\n        }\r\n        document.getElementById(matchsID).querySelectorAll(\"li\")[autoCompleteIndex - 1].focus();\r\n    } else if (event.keyCode === 13) { \r\n        // Enter\r\n        addTag(autoCompleteElement);\r\n    } else if (event.keyCode === 27) {\r\n        // Escape\r\n        arrelementsmatch = [];\r\n        document.getElementById(id).focus();\r\n    }\r\n}\r\n\r\nfunction uniqueID() {\r\n    return 'sti_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\n</script>\r\n\r\n<div class=\"svelte-tags-input-layout\" class:sti-layout-disable={disable}>\r\n    <label for={id} class={labelShow ? \"\" : \"sr-only\"}>{labelText}</label>\r\n\r\n    {#if tags.length > 0}\r\n        {#each tags as tag, i}\r\n            <span class=\"svelte-tags-input-tag\">\r\n                {#if typeof tag === 'string'}\r\n                    {tag}\r\n                {:else}\r\n                    {tag[autoCompleteKey]}\r\n                {/if}\r\n                {#if !disable}\r\n                <span class=\"svelte-tags-input-tag-remove\" on:click={() => removeTag(i)}> &#215;</span>\r\n                {/if}\r\n            </span>\r\n        {/each}\r\n    {/if}\r\n    <input\r\n        type=\"text\"\r\n        id={id}\r\n        name={name}\r\n        bind:value={tag}\r\n        on:keydown={setTag}\r\n        on:keyup={getMatchElements}\r\n        on:paste={onPaste}\r\n        on:drop={onDrop}\r\n        on:blur={() => onBlur(tag)}\r\n        class=\"svelte-tags-input\"\r\n        placeholder={placeholder}\r\n        disabled={disable}\r\n    >\r\n</div>\r\n\r\n{#if autoComplete && arrelementsmatch.length > 0}\r\n    <div class=\"svelte-tags-input-matchs-parent\">\r\n        <ul id=\"{id}_matchs\" class=\"svelte-tags-input-matchs\">\r\n            {#each arrelementsmatch as element, index}\r\n                <li\r\n                    tabindex=\"-1\"\r\n                    on:keydown={() => navigateAutoComplete(index, arrelementsmatch.length, element.label)}\r\n                    on:click={() => addTag(element.label)}>\r\n                        {@html element.search}\r\n                    </li>\r\n            {/each}\r\n        </ul>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n/* CSS svelte-tags-input */\r\n\r\n.svelte-tags-input,\r\n.svelte-tags-input-tag,\r\n.svelte-tags-input-matchs,\r\n.svelte-tags-input-layout label {\r\n    font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;\r\n    font-size: 14px;\r\n    padding: 2px 5px;\r\n}\r\n\r\n.svelte-tags-input-layout label {\r\n    margin: 4px 5px 0 0;\r\n    padding:0;\r\n    font-weight:500;\r\n}\r\n\r\n/* svelte-tags-input-layout */\r\n\r\n.svelte-tags-input-layout {\r\n    display:-webkit-box;\r\n    display:-ms-flexbox;\r\n    display:flex;\r\n    -ms-flex-wrap:wrap;\r\n        flex-wrap:wrap;\r\n    -webkit-box-align:center;\r\n        -ms-flex-align:center;\r\n            align-items:center;\r\n    padding: 0px 5px 5px 5px;\r\n    border: solid 1px #CCC;\r\n    background: #FFF;\r\n    border-radius: 2px;\r\n}\r\n\r\n.svelte-tags-input-layout:focus,\r\n.svelte-tags-input-layout:hover {\r\n    border: solid 1px #000;    \r\n}\r\n\r\n/* svelte-tags-input */\r\n\r\n.svelte-tags-input {\r\n    -webkit-box-flex: 1;\r\n        -ms-flex: 1;\r\n            flex: 1; \r\n    margin: 0;\r\n    margin-top: 5px;\r\n    border:none;\r\n}\r\n\r\n.svelte-tags-input:focus {\r\n    outline:0;\r\n}\r\n\r\n/* svelte-tags-input-tag */\r\n\r\n.svelte-tags-input-tag {\r\n    display:-webkit-box;\r\n    display:-ms-flexbox;\r\n    display:flex;\r\n    white-space: nowrap;\r\n    list-style:none;\r\n    background: #000;\r\n    color: #FFF;\r\n    border-radius: 2px;\r\n    margin-right: 5px;\r\n    margin-top: 5px;\r\n}\r\n\r\n/*.svelte-tags-input-tag:hover {\r\n    background: #CCC;\r\n}*/\r\n\r\n.svelte-tags-input-tag-remove {\r\n    cursor:pointer;\r\n}\r\n\r\n/* svelte-tags-input-matchs */\r\n\r\n.svelte-tags-input-matchs-parent {\r\n    position:relative;\r\n}\r\n\r\n.svelte-tags-input-matchs {\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    right:0;\r\n    margin:3px 0;\r\n    padding: 0px;\r\n    background:#FFF;\r\n    border: solid 1px #CCC;\r\n    border-radius: 2px;\r\n    max-height:310px;\r\n    overflow:scroll;\r\n    overflow-x:auto;\r\n}\r\n\r\n.svelte-tags-input-matchs li {\r\n    list-style:none;\r\n    padding:5px;\r\n    border-radius: 2px;\r\n    cursor:pointer;\r\n}\r\n\r\n.svelte-tags-input-matchs li:hover,\r\n.svelte-tags-input-matchs li:focus {\r\n    background:#000;\r\n    color:#FFF;\r\n    outline:none;\r\n}\r\n\r\n/* svelte-tags-input disabled */\r\n.svelte-tags-input-layout.sti-layout-disable,\r\n.svelte-tags-input:disabled {\r\n    background: #EAEAEA;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.svelte-tags-input-layout.sti-layout-disable:hover,\r\n.svelte-tags-input-layout.sti-layout-disable:focus {\r\n    border-color:#CCC;\r\n}\r\n\r\n.svelte-tags-input-layout.sti-layout-disable .svelte-tags-input-tag {\r\n    background: #AEAEAE;\r\n}\r\n\r\n.svelte-tags-input-layout.sti-layout-disable .svelte-tags-input-tag-remove {\r\n    cursor: not-allowed;\r\n}\r\n\r\n.svelte-tags-input-layout label.sr-only {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    border: 0;\r\n}\r\n</style>",
    "<script>\nimport { errorMessage } from '../utils/stores.js';\n\nlet box;\n\nfunction close() {\n  errorMessage.set(null);\n}\n\nfunction bodyKeyup(event) {\n  if (event.keyCode === 27) {\n    close();\n  }\n}\n\nfunction dimmerClick(event) {\n  if (box.contains(event.target)) {\n    return;\n  }\n  close();\n}\n</script>\n\n<svelte:body on:keyup={bodyKeyup} />\n\n{#if $errorMessage !== null}\n<div id=\"error-message\" on:click={dimmerClick}>\n  <div class=\"box\" bind:this={box}>\n    <p class=\"icon\">\n      !      \n    </p>\n    <p class=\"message\">\n      {$errorMessage === null ? '' : $errorMessage}\n    </p>\n    <p class=\"button\">\n      <button on:click={close}>Close</button>\n    </p>\n  </div>\n</div>\n{/if}\n\n<style>\n#error-message {\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: auto;\n  height: auto;\n  background-color: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: #c00;\n}\n.box {\n  background: #fff;\n  padding: 25px;\n  min-width: 300px;\n  text-align: center;\n}\n.icon {\n  font-size: 3em;\n  display: block;\n  margin: 0;\n}\n.message {\n  margin: 25px 0;\n}\n.button {\n  margin: 0;\n}\nbutton {\n  padding: 5px 10px;\n  box-sizing: border-box;\n  font-size: 14px;\n  border: 1px solid #dcdcdc;\n  border-radius: 0;\n  -webkit-appearance: none;\n  color: #555;\n  font-weight: normal;\n}\n</style>\n",
    "<script>\nimport { RELATIONS, LABELS, CATEGORY, CATEGORIES_FOR_RECOMMEND } from '../utils/constant.js';\nimport { appkey } from '../utils/config.js';\n\nexport let type;\nexport let region;\nexport let genderOption = null;\nexport let categoryOption = [];\nexport let subCategoryOption = undefined;\nexport let customCategoryOption = undefined;\nexport let flexmodeOption;\nexport let hashFilter = undefined;\nexport let onFilterChange;\nexport let cphashActive;\nexport let cphashEnabled;\nexport let cphashThreshold;\nexport let cphashFiltered;\n\nconst storedFilterOpen = window.localStorage.getItem('filteropen');\nconst GENDERS = {\n  'gender.female': LABELS['gender.female'],\n  'gender.male': LABELS['gender.male'],\n  'gender.unisex': LABELS['gender.unisex'],\n};\nlet isFilterOpen = storedFilterOpen === 'false' ? false : true;\nlet genders;\nlet categories = false;\nlet subCategories = false;\nlet customCategories = [];\n$: {\n  genders = Object.keys(GENDERS).map(gender => {\n    return {\n      label: typeof genderOption === 'string' ? gender : GENDERS[gender].code,\n      name: GENDERS[gender]['en-US'],\n    }\n  });\n}\n$: {\n  if (region === undefined) {\n    categories = false;\n  } else if (region.category && type === 'search') { // v1 search\n    categories = Object.keys(CATEGORY).filter(id => {\n      return CATEGORY[id].type === CATEGORY[region.category.code.toString()].type;\n    }).map(code => ({\n      label: parseInt(code),\n      name: CATEGORY[code].str,\n    }));\n  } else if (region.category) { // v1 stylist\n    categories = Object.keys(CATEGORY).filter(id => {\n      return CATEGORIES_FOR_RECOMMEND.includes(region.category.code) && CATEGORIES_FOR_RECOMMEND.includes(parseInt(id));\n    }).map(code => ({\n      label: parseInt(code),\n      name: CATEGORY[code].str,\n    }));\n  } else if (type === 'search' && RELATIONS[appkey]['c1_relation'][region.category1.label]) {  // v2 search\n    categories = RELATIONS[appkey]['c1_relation'][region.category1.label].child.map(c2 => ({\n      label: c2,\n      name: LABELS[c2]['en-US'],\n    }));\n  } else {  // TODO: v2 stylist\n    categories = false;\n  }\n}\n$: {\n  if (region === undefined) {\n    subCategories = false;\n  } else if (region.category && type === 'search' && CATEGORY[categoryOption]) { // v1 search\n    subCategories = CATEGORY[categoryOption]['sub_categories']\n      .map(s => ({\n        label: s.id,\n        name: s.str,\n      }));\n  } else if (region.category) { // v1 stylist\n    subCategories = false;\n  } else if (type === 'search' && RELATIONS[appkey]['c2_relation'][categoryOption]) {  // v2 search\n    subCategories = RELATIONS[appkey]['c2_relation'][categoryOption].child\n      .map(c3 => ({\n        label: c3,\n        name: LABELS[c3]['en-US'],\n      }));\n  } else {  // v2 stylist\n    subCategories = false;\n  }\n  if (subCategories !== false && subCategories.map(c => c.label).indexOf(subCategoryOption) === -1) {\n    subCategoryOption = undefined;\n  }\n}\n$: {\n  if (region === undefined) {\n    customCategories = false;\n  } else if (type === 'search' && customCategoryOption) {  // v2 search\n    customCategories = [{\n      label: customCategoryOption,\n      name: customCategoryOption.replace('vc.', '').replace('_', ' '),\n    }];\n  } else {  // v2 stylist\n    customCategories = false;\n  }\n}\n\nfunction toggleFilter() {\n  isFilterOpen = !isFilterOpen;\n  window.localStorage.setItem('filteropen', isFilterOpen);\n}\n</script>\n\n<div id=\"search-options\" class:on={isFilterOpen}>\n  <button class=\"toggle\" on:click={toggleFilter}>Filter</button>\n  <table>\n    <tr>\n      <th>GENDER</th>\n      <td>\n        {#each genders as gender}\n        <label>\n          <input type=\"radio\" value={gender.label} bind:group={genderOption} on:change={onFilterChange}>\n          <span>{gender.name}</span>\n        </label>\n        {/each}\n      </td>\n    </tr>\n    {#if categories && categories.length > 0 && !(customCategories && customCategories.length > 0)}\n    <tr>\n      <th>CATEGORY</th>\n      <td>\n        {#each categories as category (category.label)}\n        <label>\n          <input type=\"radio\" value={category.label} bind:group={categoryOption} on:change={onFilterChange}>\n          <span>{category.name}</span>\n        </label>\n        {/each}\n      </td>\n    </tr>\n    {/if}\n    {#if subCategories && subCategories.length > 0 && !(customCategories && customCategories.length > 0)}\n    <tr>\n      <th>SUB CATEGORY</th>\n      <td>\n        <label>\n          <input type=\"radio\" value={undefined} bind:group={subCategoryOption} on:change={onFilterChange}>\n          <span>none</span>\n        </label>\n        {#each subCategories as subCategory}\n        <label>\n          <input type=\"radio\" value={subCategory.label} bind:group={subCategoryOption} on:change={onFilterChange}>\n          <span>{subCategory.name}</span>\n        </label>\n        {/each}\n      </td>\n    </tr>\n    {/if}\n    {#if customCategories && customCategories.length > 0}\n    <tr>\n      <th>CUSTOM CATEGORY</th>\n      <td>\n        {#each customCategories as customCategory}\n        <label>\n          <input type=\"radio\" value={customCategory.label} bind:group={customCategoryOption} on:change={onFilterChange}>\n          <span>{customCategory.name}</span>\n        </label>\n        {/each}\n      </td>\n    </tr>\n    {/if}\n    {#if type === 'search'}\n    <tr>\n      <th>MODE</th>\n      <td>\n        <label>\n          <input type=\"radio\" value=\"filter\" bind:group={flexmodeOption} on:change={onFilterChange}>\n          <span>filter</span>\n        </label>\n        <label>\n          <input type=\"radio\" value=\"naive\" bind:group={flexmodeOption} on:change={onFilterChange}>\n          <span>naive</span>\n        </label>\n      </td>\n    </tr>\n    <tr>\n      <th>HASH</th>\n      <td>\n        <label>\n          <input type=\"radio\" value={undefined} bind:group={hashFilter} on:change={onFilterChange}>\n          <span>none</span>\n        </label>\n        <label>\n          <input type=\"radio\" value=\"image_hash\" bind:group={hashFilter} on:change={onFilterChange}>\n          <span>image hash</span>\n        </label>\n        <label>\n          <input type=\"radio\" value=\"cynhash\" bind:group={hashFilter} on:change={onFilterChange}>\n          <span>cynhash</span>\n        </label>\n      </td>\n    </tr>\n    {#if cphashActive}\n    <tr class:off={!cphashActive}>\n      <th>CPHASH</th>\n      <td>\n        <label>\n          <input type=\"radio\" value={true} bind:group={cphashEnabled} disabled={!cphashActive}>\n          <span>Enable</span>\n        </label>\n        <label>\n          <input type=\"radio\" value={false} bind:group={cphashEnabled} disabled={!cphashActive}>\n          <span>Disable</span>\n        </label>\n        <label>\n          Threshold\n          <input type=\"number\" bind:value={cphashThreshold} disabled={!cphashActive}>\n        </label>\n        <span>Filtered: {cphashFiltered}</span>\n      </td>\n    </tr>\n    {/if}\n    {/if}\n  </table>\n</div>\n\n<style>\n.off * {\n  color: #ccc;\n}\ninput[type=number] {\n  width: 3em;\n}\n</style>\n",
    "<script>\nimport { url } from '@sveltech/routify';\n</script>\n\n<div class=\"navbar\" id=\"navbar\">\n  <a href={$url('/')}>\n    <img src=\"/images/logo_pxl_b.png\" alt=\"PXL\">\n  </a>\n  <a href={$url('/products')}>\n    <i class=\"fas fa-filter\"></i>\n  </a>\n</div>\n\n<style>\n.navbar {\n  padding: 20px;\n  overflow: auto;\n}\n@media (min-width: 480px) {\n  .navbar {\n    padding: 40px;\n  }\n}\n.navbar > a {\n  float: left;\n  display: inline-block;\n}\n.navbar > a > img {\n  height: 20px;\n  margin: 5px 0 5px 0;\n  vertical-align: middle;\n}\n@media (min-width: 480px) {\n  .navbar > a > img {\n    height: 30px;\n  }\n}\n</style>\n",
    "<script>\nimport { url, params } from '@sveltech/routify';\n\nexport let product;\n\nfunction formatPrice(n) {\n  return new Intl.NumberFormat(navigator.language, { style: 'currency', currency: 'KRW' }).format(n);\n}\n</script>\n\n<div class=\"grid-item\">\n  <img class=\"thumbnail\" src={product.image_url} decode=\"async\" alt=\"\">\n  <a target=\"_blank\" href={$url(`/view/?image_url=${encodeURIComponent(product.image_url)}&type=${$params.type}`)}>\n    <div class=\"view-button\"><img src=\"/images/icon_search.svg\" alt=\"Search\"></div>\n  </a>\n  <div class=\"name\"><a target=\"_blank\" href=\"{product.product_url}\">{product.name.replace(/<\\/?[^>]+(>|$)/g, \"\")}</a></div>\n  <div class=\"price\"><a target=\"_blank\" href=\"{product.product_url}\">{formatPrice(product.price)}</a></div>\n  <div class=\"product-code\">{product.product_code}</div>\n</div>\n\n<style>\n.grid-item {\n  position: relative;\n  width: 100%;\n  box-sizing: border-box;\n  background: #FFF;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);\n  border: 2px solid #ececec;\n}\n.grid-item .thumbnail {\n  width: 100%;\n  height: 200px;\n  display: block;\n  object-fit: cover;\n}\n.view-button {\n  width: 40px;\n  height: 40px;\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  background: #9F6DFA;\n}\n.grid-item .view-button > img {\n  width: 20px;\n  height: 20px;\n  margin: 10px;\n}\n.grid-item > .name {\n  margin: 10px;\n  max-height: 2.8em;\n  min-height: 2.8em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n}\n.grid-item > .name > a {\n  font-size: 12px;\n  color: #555;\n  text-decoration: none;\n  word-break: break-all;\n}\n.grid-item > .price {\n  padding: 0 10px 10px 10px;\n  text-align: right;\n}\n.grid-item .price > a {\n  font-size: 12px;\n  color: #9F6DFA;\n  text-decoration: none;\n}\n\n.grid-item > .product-code {\n  margin: 10px;\n  max-height: 2.8em;\n  min-height: 2.8em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  word-break: break-all;\n  font-size: 12px;\n  color: #555;\n}\n\n@media screen and (min-width: 768px) {\n  .view-button { display: none; }\n  .grid-item:hover .view-button { display: inline-block; }\n}\n</style>\n",
    "<script>\nimport { errorMessage } from '../utils/stores.js';\nimport { LABELS } from '../utils/constant.js';\nimport ProductItem from './ProductItem.svelte';\n\nexport let type;\nexport let results;\n\nfunction getCategoryName(label) {\n  if (typeof label === 'string' && label.indexOf('.') > -1) {\n    return LABELS[label]['en-US'];\n  }\n  return LABELS[LABELS[label]]['en-US'];\n}\n</script>\n\n  <div id=\"result-list\" class=\"{type}\" class:loading={results === undefined}>\n    {#if type === 'recommend-pair' && results !== undefined && Object.keys(results).length > 0}\n      {#each Object.keys(results) as label}\n        <h2>{getCategoryName(label)}</h2>\n        <div class=\"grid-list\">\n          {#each results[label] as product}\n            <ProductItem product={product} />\n          {/each}\n        </div>\n      {/each}\n    {:else if type === 'recommend-multi' && results !== undefined && results.length > 0}\n      {#each results as set, i}\n      <div class=\"set\">\n        <h2>set {i + 1}</h2>\n        <div class=\"grid-list\">\n          {#each set as product}\n            <ProductItem product={product} />\n          {/each}\n        </div>\n      </div>\n      {/each}\n    {:else if (type === 'search' || type === 'recommend') && results !== undefined && results.length > 0}\n      <div class=\"grid-list\">\n        {#each results as product}\n          <ProductItem product={product} />\n        {/each}\n      </div>\n    {:else if results !== undefined}\n      No results found.\n    {/if}\n  </div>\n\n<style>\n.recommend-multi {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(466px, 1fr));\n  grid-column-gap: 40px;\n  grid-row-gap: 40px;\n}\n.recommend-multi h2 {\n  margin-top: 0;\n}\n</style>\n",
    "<script>\nimport { tick } from 'svelte';\nimport { appkey, apibase, apikey, demoImages, resultCount, saveSettings } from '../utils/config.js';\nimport { APPS } from '../utils/constant.js';\nimport { demoImages as demoImageStore } from '../utils/stores.js';\n\nlet _appkey, _apibase, _apikey, _demoImages, _resultCount;\n$demoImageStore = demoImages;\n\nlet isSettingOpen = false;\nlet modal;\n$: isJSONMalform = _demoImages !== undefined && _demoImages.length > 0 && !isValidJSON(_demoImages);\n\nfunction dimmerClick(event) {\n  if (modal.contains(event.target)) {\n    return;\n  }\n  closeModal();\n}\n\nfunction openModal() {\n  _appkey = appkey;\n  _apibase = apibase;\n  _apikey = apikey;\n  _demoImages = demoImages;\n  _resultCount = resultCount;\n  isSettingOpen = true;\n}\n\nfunction closeModal() {\n  isSettingOpen = false;\n}\n\nfunction updateAPIBase() {\n  _apibase = APPS[_appkey].apibase;\n}\n\nfunction isValidJSON(str) {\n  try {\n    JSON.parse(str);\n  } catch(e) {\n    return false;\n  }\n  const json = JSON.parse(str);\n  return Array.isArray(json) && json.length > 0;\n}\n\nfunction bodyKeyup(event) {\n  if (isSettingOpen && event.keyCode === 27) {\n    closeModal();\n  }\n}\n\nfunction saveSetting() {\n  $demoImageStore = _demoImages;\n  saveSettings({\n    appkey: _appkey,\n    apibase: _apibase,\n    apikey: _apikey,\n    demoImages: _demoImages,\n    resultCount: _resultCount,\n  });\n  closeModal();\n  location.reload();\n}\n</script>\n\n<svelte:body on:keyup={bodyKeyup} />\n<button id=\"setting-button\" on:click|preventDefault={openModal}><i class=\"fas fa-cog\"></i></button>\n<div id=\"api-setting\" class:on={isSettingOpen} on:click={dimmerClick}>\n  <form class=\"block shadow-sm text-align-left\" on:submit|preventDefault={saveSetting} bind:this={modal}>\n    <div class=\"form-item\">\n      App\n      <div class=\"label-group\">\n        {#each Object.keys(APPS) as item}\n        <label>\n          <input type=\"radio\" name=\"app\" bind:group={_appkey} value={item} on:change={updateAPIBase}>\n          {APPS[item].name}\n        </label>\n        {/each}\n      </div>\n    </div>\n    <label>\n      API base\n      <input type=\"text\" bind:value={_apibase}>\n    </label>\n    <label>\n      API key\n      <input type=\"text\" id=\"input_apikey\" bind:value={_apikey}>\n    </label>\n    <label>\n      Demo images\n      <textarea bind:value={_demoImages} class:err={isJSONMalform} placeholder=\"[&quot;imageURL&quot;, &quot;imageURL&quot;, ... ]\"></textarea>\n    </label>\n    <label>\n      Result count\n      <input type=\"number\" bind:value={_resultCount}>\n    </label>\n    <input type=\"submit\" value=\"Apply\" disabled={isJSONMalform}>\n  </form>\n</div>\n\n<style>\n#setting-button {\n  position: absolute;\n  top: 40px;\n  right: 40px;\n  border: 0 none;\n  padding: 0;\n  background: transparent;\n  font-size: 20px;\n  line-height: 33px;\n  color: inherit;\n}\n#api-setting {\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: auto;\n  height: auto;\n  background-color: rgba(0, 0, 0, 0.6);\n  display: none;\n  align-items: center;\n  justify-content: center;\n}\n#api-setting.on {\n  display: flex;\n}\n#api-setting form {\n  width: 600px;\n  background-color: #fff;\n  max-height: 100%;\n  overflow: auto;\n}\n#api-setting .form-item,\n#api-setting label {\n  font-size: 14px;\n  font-weight: 600;\n}\n#api-setting .label-group {\n  display: block;\n  margin: 10px 0 20px;\n}\n#api-setting .label-group label {\n  margin-left: 2.5em;\n  font-weight: normal;\n}\n#api-setting .label-group label:first-child {\n  margin-left: 0;\n}\n#api-setting .label-group input {\n  margin-right: 0.4em;\n}\n#api-setting input[type=text],\n#api-setting input[type=submit],\n#api-setting textarea {\n  width: 100%;\n  height: 40px;\n  padding: 10px;\n  margin: 10px 0 20px;\n  box-sizing: border-box;\n  font-size: 14px;\n  border: 1px solid #dcdcdc;\n  border-radius: 0;\n  -webkit-appearance: none;\n  color: #555;\n  font-weight: normal;\n}\n#api-setting textarea {\n  height: 100px;\n}\n#api-setting textarea.err {\n  border-color: #c00;\n}\n#api-setting input[type=submit] {\n  margin-top: 25px;\n  margin-bottom: 0;\n}\n#api-setting input[type=submit]:disabled {\n  opacity: 0.4;\n}\n[type=number] {\n  display: block;\n  width: 4em;\n  margin: 10px 0 0;\n}\n</style>\n",
    "<script>\nimport { onMount, onDestroy, tick } from 'svelte';\nimport ClipboardJS from 'clipboard';\nimport { appkey, apibase, apikey } from '../utils/config.js';\n\nlet cb;\nlet showToolTip = false;\n\nonMount(() => {\n  cb = new ClipboardJS('#share', {\n    text: getURL,\n  });\n  cb.on('success', async () => {\n    showToolTip = true;\n  });\n});\n\nonDestroy(() => {\n  cb.destroy();\n});\n\nfunction getURL() {\n  let url = window.location.href;\n  return `${url}${url.indexOf('?') > -1 ? '&' : '?'}appkey=${appkey}&apibase=${encodeURIComponent(apibase)}&apikey=${apikey}`;\n}\n</script>\n\n<button id=\"share\" title=\"Copy share URL\" on:mouseenter={() => showToolTip = false}><i class=\"fas fa-share-alt\"></i></button>\n<p class:on={showToolTip}>Copied!</p>\n\n<style>\nbutton {\n  position: absolute;\n  top: 40px;\n  right: 80px;\n  border: 0 none;\n  padding: 0;\n  background: transparent;\n  font-size: 20px;\n  line-height: 33px;\n  color: inherit;\n}\np {\n  margin: 0;\n  position: absolute;\n  top: 74px;\n  right: 51px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);\n  background: #fff;\n  border-radius: 100px;\n  padding: 5px 15px;\n  font-size: 11px;\n  opacity: 0;\n}\n.on {\n  animation: tt 1s none;\n}\n@keyframes tt {\n  0% {\n    opacity: 0;\n  }\n  15% {\n    opacity: 1;\n  }\n  85% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n</style>\n",
    "\n<script type=\"text/javascript\">\n    import { onMount } from 'svelte';\n    import Tags from \"svelte-tags-input\";\n    import { errorMessage, } from '../utils/stores.js';\n\n    let loading = false;\n\n    let arrayProduct = [];\n\n    let arrayCategory = [];\n    let arrayAttribute = [];\n\n    let arrayCategorySelected = [];\n    let arrayAttributeSelected = [];\n    let query = \"\";\n    let next = '';\n    let allType = true;\n\n    function formatPrice(n) {\n        return new Intl.NumberFormat(navigator.language, { style: 'currency', currency: 'KRW' }).format(n);\n    }\n\n\n\n    function tagsCategoryOnTags(event) {\n        arrayCategorySelected = event.detail.tags;\n        calcQuery();\n    }\n    function tagsAttributeOnTags(event) {\n        arrayAttributeSelected = event.detail.tags;\n        calcQuery();\n    }\n\n    const groupBy = (xs, f) => xs.reduce((rv, x) => {\n        (rv[f(x)] = rv[f(x)] || []).push(x);\n        return rv;\n    }, {});\n\n    function calcQuery() {\n        const clauseCategory = allType ? arrayCategorySelected.map(v => v.replace(/^(c\\d)\\.(.+)$/, '$1 = \"$1.$2\"')).join(\" or \") : arrayCategorySelected.map(v => v.replace(/^(c\\d)\\.(.+)$/, '$1 = \"$1.$2\"')).join(\" and \");\n        const grouped = groupBy(arrayAttributeSelected, v => v.replace(/^([^.]+)\\.(.+)/, \"$1\"));\n        const clauseAttribute = Object.keys(grouped).map(v => {\n            const array = grouped[v];\n            return '(' + array.map(v => v.replace(/^([^.]+)\\.(.+)$/, '\"$1.$2\" in $1')).join(\" or \") + ')'\n        }).join(\" and \")\n        query = [clauseCategory, clauseAttribute].filter(_ => _).join(\" and \");\n\n        next = '';\n        arrayProduct = [];\n        buttonMoreClick();\n    }\n    function buttonMoreClick() {\n        if(loading)\n            return;\n\n        if(!next && arrayProduct.length)\n            return;\n\n        loading = true;\n        (async () => {\n            /*\n                curl 'https://api.pxl.ai/v3/products?count=2' \\\n                    -H 'apikey: INTRdbfc77634964500b3b54cbd7dea4ed0a0d6ddc4acee39871425aca558c5d414e' \\\n                    --data-raw 'c3=\"c3.long_pants\"' \\\n                    --compressed\n             */\n            const response = await fetch(\n                next ?\n                    'https://api.pxl.ai/v3' + next :\n                    'https://api.pxl.ai/v3/products?count=100'\n                , {\n                method: 'post',\n                headers: {\n                    apikey: localStorage.getItem('apikey'),\n                },\n                body: query,\n            });\n            if(!response.status.toString().match(/2\\d\\d/)) {\n                $errorMessage = '';\n                return;\n            }\n            const json = await response.json();\n            if (json?.products.length === 0) {\n                $errorMessage = '검색된 결과가 없습니다.';\n                loading = false;\n                return;\n            }\n            next = json?.links?.next;\n            arrayProduct = [...arrayProduct, ...json.products];\n            loading = false;\n        })();\n    }\n\n    function checkAll() {\n        const all=document.getElementById('all');\n        if(all.checked) {\n            allType = true;\n            calcQuery()\n        }else {\n            allType = false;\n            calcQuery();\n        }\n    };\n\n    buttonMoreClick();\n\n\n    onMount(async () => {\n        document.getElementById('tagsCategory')?.focus();\n\n        window.addEventListener('scroll', function (e) {\n            if(document.body.scrollHeight - window.scrollY - window.innerHeight - 1000 < 0)\n                buttonMoreClick();\n        });\n\n        ['tagsCategory', 'tagsAttribute'].forEach((id) => {\n            const tagsInput = document.getElementById(id);\n            tagsInput.addEventListener('blur', () => {\n                const matches = document.getElementById(`${id}_matchs`);\n                if (matches) {\n                    matches.style.display = 'none';\n                }\n            });\n            tagsInput.addEventListener('keydown', (e) => {\n                if (e.key !== \"ArrowDown\" && e.key !== \"ArrowUp\") {\n                    return;\n                }\n                const matches = document.getElementById(`${id}_matchs`);\n                if (matches) {\n                    matches.style.display = 'block';\n                    if (e.key === \"ArrowDown\") {\n                        matches.children[0].focus();\n                    } else {\n                        const lastIndex = matches.children.length - 1;\n                        matches.children[lastIndex].focus();\n                    }\n                }\n            })\n            tagsInput.addEventListener('focus', () => {\n                const matches = document.getElementById(`${id}_matchs`);\n                if (matches) {\n                    matches.style.display = 'block';\n                }\n            });\n        });\n\n        const body = document.querySelector(\"body\");\n        body.addEventListener(\"click\", (e) => {\n            if (e.target.classList.contains(\"svelte-tags-input\")) {\n                return;\n            }\n            ['tagsCategory', 'tagsAttribute'].forEach((id) => {\n                const matches = document.getElementById(`${id}_matchs`);\n                if (matches) {\n                    matches.style.display = 'none';\n                }\n            });\n        });\n\n        const appFile = {\n            fashion2: {\n                category: 'category2.json',\n                attribute: 'attribute2.json',\n            },\n            fashion3: {\n                category: 'category3.json',\n                attribute: 'attribute3.json',\n            },\n        };\n\n        const app = localStorage.getItem(\"app\");\n        const file = appFile[app];\n        if(file) {\n            arrayCategory = await (await fetch(`/json/${file.category}`)).json();\n            arrayAttribute = await (await fetch(`/json/${file.attribute}`)).json();\n        }\n    });\n\n</script>\n\n<style>\n    .inputs :global(.svelte-tags-input-layout) {\n        border: 1px solid transparent;\n        margin: 10px 5px;\n    }\n    .inputs :global(.svelte-tags-input) {\n        border: 1px solid #CCC;\n        border-radius: 5px;\n        padding: 6px 10px;\n    }\n    .inputs :global(.svelte-tags-input::placeholder) {\n        opacity: 1;\n        color:#8e8e8e;\n    }\n    .arrayProduct {\n        text-align: center;\n    }\n\n</style>\n<div class=\"view2\">\n    <div class=\"inputs\">\n        <label for=\"all\"><input on:click={checkAll} type=\"checkbox\" id=\"all\" name=\"all\" checked> All Category</label>\n        <Tags\n                id=\"tagsCategory\"\n                addKeys={[9, 13]}\n                removeKeys={[8, 27]}\n                onlyUnique={true}\n                minChars={0}\n                onlyAutocomplete={false}\n                labelShow\n                placeholder={\"ex) tops, bottoms, shoes, headwear, etc...\"}\n                labelText={\"Category\"}\n                autoComplete={arrayCategory}\n                on:tags={tagsCategoryOnTags}\n        />\n        <Tags\n                id=\"tagsAttribute\"\n                addKeys={[9]}\n                removeKeys={[8, 27]}\n                onlyUnique={true}\n                minChars={0}\n                onlyAutocomplete={false}\n                labelShow\n                placeholder={\"ex) color, pattern, fabric, decoration, etc...\"}\n                labelText={\"Attribute\"}\n                autoComplete={arrayAttribute}\n                on:tags={tagsAttributeOnTags}\n        />\n        <pre style=\"white-space: pre-wrap\">query: '{query ? query : \"all\"}'</pre>\n    </div>\n\n    <div class=\"arrayProductLength\">{arrayProduct.length} item(s).</div>\n    <div class=\"arrayProduct\">\n        {#each arrayProduct as p}\n            <a href={p.product_url} class=\"product\" target=\"_blank\">\n                <div>\n                    <div class=\"img\" style=\"background-image: url('{p.image_urls[0]}')\">\n                        {p.name}\n                    </div>\n                    <div class=\"description_workaround\">\n                        <div class=\"name\">{p.name.replace(/<\\/?[^>]+(>|$)/g, \"\")}</div>\n                        <div class=\"price\">{formatPrice(p.price)}</div>\n                    </div>\n                </div>\n            </a>\n        {/each}\n    </div>\n</div>\n",
    "<script>\nimport { goto, params } from '@sveltech/routify';\nimport { APPS, FLEX_MODE } from '../utils/constant.js';\nimport { errorMessage, fileElement } from '../utils/stores.js';\nimport Detect from '../components/Detect.svelte';\nimport TypeTab from '../components/TypeTab.svelte';\nimport Filter from '../components/Filter.svelte';\nimport ProductList from '../components/ProductList.svelte';\nimport { appkey } from '../utils/config.js';\n\nexport let scoped;\n\nlet pxl = scoped.pxl;\n\nlet detectTime = 0;\nlet searchTime = 0;\n\nlet current_categories = undefined;\nlet current_gender = undefined;\nlet current_subcategory = undefined;\nlet current_customcategory;\nlet current_region = undefined;\nlet current_attributes = undefined;\nlet flexmodeOption = 'filter';\nlet hashFilter = undefined;\n$: flexmode = FLEX_MODE[flexmodeOption];\nlet regions = [];\nlet analyze = [];\n\nlet image_url = $params.image_url;\nlet searchType = $params.type;\nlet selectedRegionId = $params.region;\n$: handleParams($params);\n\nlet results;\n\nlet csvData = ['', $params.image_url];\n\n// we send hash name to api server instead of filtering cphash on viewer side.\nlet filtered;\n$: {\n  cphashActive;\n  cphashEnabled;\n  cphashThreshold;\n  filtered = filterResult(results);\n  logCSVData(filtered);\n}\n\nlet cphashActive = true;\nlet cphashEnabled = true;\nlet cphashThreshold = 10;\nlet cphashFiltered = 0;\n\nfunction handleParams(p) {\n  if (p.image_url !== undefined && image_url !== p.image_url) {\n    setResult(p.image_url);\n    return;\n  } else if (selectedRegionId !== p.region) {\n    selectedRegionId = p.region;\n    setCurrentValueFromRegion();\n    update_result();\n    return;\n  } else if (searchType !== p.type) {\n    searchType = p.type;\n    update_result();\n    return;\n  }\n  setResult(p.image_url);\n}\n\nfunction setResult(url) {\n  if (appkey === 'tonic1' && url !== undefined) {\n    setTonicResult(url);\n  } else {\n    // FIXME: consider splitting into fashion component\n    setFashionResult(url);\n  }\n}\n\nasync function setTonicResult(url) {\n  image_url = url;\n  let result = await pxl.tonic(url).catch(err => errorMessage.set(err));\n  if (result) {\n    results = result;\n  }\n}\n\nasync function setFashionResult(url) {\n  detectTime = 0;\n  let detectStart = performance.now();\n  if (url !== undefined) {\n    image_url = url;\n    regions = await pxl.detect(image_url).catch(err => errorMessage.set(err));\n  } else if ($fileElement !== null) {\n    regions = await pxl.detect_by_file($fileElement);\n    let imageFile = new FileReader();\n    imageFile.onload = e => image_url = e.target.result;\n    imageFile.readAsDataURL($fileElement.files[0])\n  } else {\n    $errorMessage = 'No image URL or file.';\n    $goto('/');\n    return;\n  }\n  detectTime = performance.now() - detectStart;\n\n  if (regions === undefined || regions.length === 0) {\n    $errorMessage = 'Detect Failed.';\n    $goto('/');\n    return;\n  }\n  let region = regions.find(r => r.id.toString() === selectedRegionId);\n  if (!region) {\n    region = regionArgMax(regions);\n    $goto(`/view/?${$params.image_url ? `image_url=${encodeURIComponent($params.image_url)}&` : ''}type=${$params.type}&region=${region.id}`);\n    setAnalyze(url);\n    return;\n  }\n  setCurrentValueFromRegion();\n  update_result();\n  setAnalyze(url);\n}\n\nasync function setAnalyze(url) {\n  let result;\n  if (url != undefined) {\n    result = await pxl.analyze(image_url);\n  } else if ($fileElement !== null) {\n    result = await pxl.analyze_by_file($fileElement);\n  }\n  if (result) {\n    analyze = result;\n  }\n}\n\n// https://github.com/ocsdk/shuqstyle-js-sdk/blob/master/pxl.js#L574\nfunction regionArgMax(l) {\n  // Favor big rectangles. The abs() call here is overkill, but I don't trust the data.\n  return argmax(l, (e) => {\n    const score = e.score || e.category.score;\n    return Math.abs(e.rx2 - e.rx1) * Math.abs(e.ry2 - e.ry1) * score\n  });\n}\n\n// https://github.com/ocsdk/shuqstyle-js-sdk/blob/master/pxl.js#L536\nfunction argmax(l, f) {\n  // FIXME: This should be made to work with NodeLists.\n  let ms = f(l[0]),\n      mo = l[0];\n\n  l.map((e) => {\n    let i = f(e);\n\n    if (i > ms) {\n      ms = i;\n      mo = e;\n    }\n  });\n\n  return mo;\n}\n\nfunction setCurrentValueFromRegion() {\n  let region = regions.find(r => r.id.toString() === selectedRegionId);\n  if (!region) {\n    return;\n  }\n  current_region = region;\n  current_gender = region.gender.label || region.gender.code;\n  current_categories = region.category2 ? region.category2.label : region.category.code;\n  current_subcategory = region.category3 ? region.category3.label : region.sub_category ? region.sub_category.code : undefined;\n  current_customcategory = region.virtual_category ? region.virtual_category.label : undefined;\n  current_attributes = [];\n  flexmodeOption = 'filter';\n  hashFilter = undefined;\n}\n\nasync function update_result() {\n  searchTime = 0;\n  let searchStart = performance.now();\n  results = undefined;\n  if ($params.type === 'search') {\n    results = await pxl.search(current_region.id, current_gender, current_categories,\n      current_subcategory, current_customcategory, current_attributes, flexmode, hashFilter)\n      .catch(err => errorMessage.set(err));\n  } else if (['recommend', 'recommend-pair', 'recommend-multi'].indexOf($params.type) > -1) {\n    const mode = {\n      'recommend': 0,\n      'recommend-pair': 1,\n      'recommend-multi': 2,\n    };\n    results = await pxl.recommend(current_region.id, mode[$params.type], current_gender, current_categories)\n      .catch(err => errorMessage.set(err));\n  }\n  searchTime = performance.now() - searchStart;\n}\n\nfunction filterResult(results) {\n  if (results === undefined || $params.type !== 'search') {\n    return results;\n  }\n  cphashActive = true;\n  cphashFiltered = 0;\n  if (!cphashEnabled) {\n    return results;\n  }\n  if (results.filter(r => r.cphash !== undefined).length === 0) {\n    cphashActive = false;\n    return results;\n  }\n  let filtered = []\n  for (let r of results) {\n    if (!r.cphash) {\n      filtered.push(r);\n      continue;\n    }\n    let dup = filtered\n      .filter(f => f.cphash !== undefined)\n      .filter(f => cphashCompare(r.cphash, f.cphash, cphashThreshold));\n    if (dup.length === 0) {\n      filtered.push(r);\n    } else {\n      cphashFiltered++;\n    }\n  }\n  return filtered;\n}\n\nfunction cphashCompare(h1, h2, ht=10) {\n  let d = 0, m = 0;\n  for (let i = 0; i < h1.length; i+= 4) {\n    m = parseInt(h1.slice(i, i + 4), 16) ^ parseInt(h2.slice(i, i + 4), 16);\n    while (m > 0) {\n      m &= m - 1;\n      d += 1;\n    }\n  }\n  return d <= ht;\n}\n\nfunction logCSVData(results) {\n  if (csvData[1] !== $params.image_url)\n    csvData = ['', $params.image_url];\n  if (csvData.length === 2) {\n    for (const i in results) {\n      if (i === '4')\n        break\n      csvData.push(...['', results[i].image_url, results[i].product_code, results[i].product_url])\n    }\n    if (csvData.length > 2) {\n      console.log('csv for 자동진열')\n      console.log(csvData.join(','))\n    }\n  }\n}\n</script>\n\n<div id=\"view\">\n  {#if appkey === 'tonic1'}\n    <div id=\"query-image\">\n      <img src={image_url} class=\"query-image\" alt=\"\">\n    </div>\n    <div id=\"app-type\">\n      {APPS[appkey].name}\n    </div>\n  {:else}\n  <Detect image_url={image_url} regions={regions} analyze={analyze} current_region={current_region} />\n  <TypeTab selectedRegionId={selectedRegionId} />\n  <Filter\n    type={$params.type}\n    region={current_region}\n    bind:genderOption={current_gender}\n    bind:categoryOption={current_categories}\n    bind:subCategoryOption={current_subcategory}\n    bind:customCategoryOption={current_customcategory}\n    bind:flexmodeOption={flexmodeOption}\n    cphashActive={false}\n    bind:cphashEnabled={cphashEnabled}\n    bind:cphashThreshold={cphashThreshold}\n    cphashFiltered={cphashFiltered}\n    bind:hashFilter={hashFilter}\n    onFilterChange={update_result} />\n  {/if}\n  <ProductList\n    type={appkey === 'tonic1' ? 'search' : $params.type}\n    results={filtered}\n  />\n  {#if detectTime > 0 && searchTime > 0}\n  <p class=\"performance\">Detect: {parseInt(detectTime)}ms / Search: {parseInt(searchTime)}ms</p>\n  {/if}\n</div>\n\n<style>\n#view {\n  position: relative;\n}\n.performance {\n  text-align: center;\n  font-size: 11px;\n  color: #999;\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}